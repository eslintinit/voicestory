datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id                      String          @default(cuid()) @id
  fullname                String
  username                String          @unique
  bio                     String?
  email                   String?         @unique
  social                  String?
  image                   String?
  isOnline                Boolean         @default(false)
  communitiesOwned        Community[]     @relation(name: "UserCommunityAuthor")
  communitiesFollowed     Community[]     @relation(name: "UserCommunityMember")
  currentChannel          Channel?
  channelsInfo            ChannelInfo[]
  messages                Message[]
  files                   File[]
  role                    Role[]          @relation(name: "UserRoles")
  owner                   String?
}

model Community {
  id                      String          @default(cuid()) @id
  name                    String          @unique
  url                     String          @unique
  image                   String?
  description             String?
  isPrivate               Boolean         @default(false)
  author                  User?           @relation(name: "UserCommunityAuthor")
  members                 User[]          @relation(name: "UserCommunityMember")
  channels                Channel[]
}

model Channel {
  id                      String          @default(cuid()) @id
  createdAt               DateTime        @default(now())
  name                    String
  url                     String          @unique
  description             String?
  isPrivate               Boolean         @default(false)
  community               Community
  author                  User?           @relation(name: "UserChannelAuthor")
  messages                Message[]
  typingUsers             User[]
  userData                ChannelInfo[]
}

model Message {
  id                      String          @default(cuid()) @id
  createdAt               DateTime        @default(now())
  updatedAt               DateTime        @updatedAt
  body                    String?
  channel                 Channel?
  author                  User
}

model File {
  id                      String          @default(cuid()) @id
  createdAt               DateTime        @default(now())
  filename                String
  mimetype                String
  filesize                String?
  message                 Message?
  encoding                String
  Key                     String          @unique
  uploader                User
}

model Role {
  id                      String          @default(cuid()) @id
  createdAt               DateTime        @default(now())
  title                   String          @unique
  roleSettings            String
  color                   String
  users                   User[]          @relation(name: "UserRoles")
}

model ChannelInfo {
  id                      String          @default(cuid()) @id
  channel                 Channel
  user                    User
  lastUpdateAt            DateTime        @default(now())
  uniqueUserChannelPair   String          @unique
}
